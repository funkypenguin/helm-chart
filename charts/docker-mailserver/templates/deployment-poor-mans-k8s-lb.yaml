{{/* This whole template is only necessary if we're using the phone-home webhook implementation */}}
{{ if .Values.poorMansK8sLb.enabled -}}  
---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  labels:
    app: {{ template "dockermailserver.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    heritage: "{{ .Release.Service }}"
    release: "{{ .Release.Name }}"
  name: {{ template "dockermailserver.fullname" . }}-phonehome
spec:
  replicas: {{ default 2 .Values.deployment.replicas }}
  selector:
    matchLabels:
      app: {{ template "dockermailserver.fullname" . }}
      release: "{{ .Release.Name }}"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: "RollingUpdate"
  template:
    metadata:
      labels:
        app: {{ template "dockermailserver.fullname" . }}
        release: "{{ .Release.Name }}"
    spec:

      # We need these phone-home containers to exist on the same node as dockermailserver
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ template "dockermailserver.fullname" . }}
            topologyKey: failure-domain.beta.kubernetes.io/zone
          
      containers:
        - name: phone-home-25
          image: funkypenguin/poor-mans-k8s-lb
          imagePullPolicy: Always
          env:
          - name: REPEAT_INTERVAL
            value: "300"
          - name: FRONTEND_PORT
            value: "25"
          - name: BACKEND_PORT
            value: "30025"
            {{- if .Values.haproxy.enabled }}              
          - name: SEND_PROXY
            value: "send-proxy"            
            {{- end }}     
          - name: NAME
            value: "docker-mailserver-smtp"
          - name: WEBHOOK
            value: {{ .Values.haproxy.webhookUrl }}
          - name: WEBHOOK_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ template "dockermailserver.fullname" . }}-secrets
                key: webhook_token.secret    
        - name: phone-home-110
          image: funkypenguin/poor-mans-k8s-lb
          imagePullPolicy: Always
          env:
          - name: REPEAT_INTERVAL
            value: "300"
          - name: FRONTEND_PORT
            value: "110"
          - name: BACKEND_PORT
            value: "30110"
            {{- if .Values.haproxy.enabled }}              
          - name: SEND_PROXY
            value: "send-proxy"            
            {{- end }}     
          - name: NAME
            value: "docker-mailserver-pop3"
          - name: WEBHOOK
            value: {{ .Values.haproxy.webhookUrl }}
          - name: WEBHOOK_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ template "dockermailserver.fullname" . }}-secrets
                key: webhook_token.secret                  
        - name: phone-home-587
          image: funkypenguin/poor-mans-k8s-lb
          imagePullPolicy: Always
          env:
          - name: REPEAT_INTERVAL
            value: "300"
          - name: FRONTEND_PORT
            value: "587"
          - name: BACKEND_PORT
            value: "30587"          
          - name: NAME
            value: "docker-mailserver-submission"
          - name: WEBHOOK
            value: {{ .Values.haproxy.webhookUrl }}
          - name: WEBHOOK_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ template "dockermailserver.fullname" . }}-secrets
                key: webhook_token.secret      
        - name: phone-home-465
          image: funkypenguin/poor-mans-k8s-lb
          imagePullPolicy: Always
          env:
          - name: REPEAT_INTERVAL
            value: "300"
          - name: FRONTEND_PORT
            value: "465"
          - name: BACKEND_PORT
            value: "30465"
          - name: NAME
            value: "docker-mailserver-smtps"
          - name: WEBHOOK
            value: {{ .Values.haproxy.webhookUrl }}
          - name: WEBHOOK_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ template "dockermailserver.fullname" . }}-secrets
                key: webhook_token.secret                                
        - name: phone-home-993
          image: funkypenguin/poor-mans-k8s-lb
          imagePullPolicy: Always
          env:
          - name: REPEAT_INTERVAL
            value: "300"
          - name: FRONTEND_PORT
            value: "993"
          - name: BACKEND_PORT
            value: "30993"
          - name: NAME
            value: "docker-mailserver-imaps"          
            {{- if .Values.haproxy.enabled }}              
          - name: SEND_PROXY
            value: "send-proxy"            
            {{- end }}             
          - name: WEBHOOK
            value: {{ .Values.haproxy.webhookUrl }}
          - name: WEBHOOK_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ template "dockermailserver.fullname" . }}-secrets
                key: webhook_token.secret     
        - name: phone-home-995
          image: funkypenguin/poor-mans-k8s-lb
          imagePullPolicy: Always
          env:
          - name: REPEAT_INTERVAL
            value: "300"
          - name: FRONTEND_PORT
            value: "995"
          - name: BACKEND_PORT
            value: "30995"
            {{- if .Values.haproxy.enabled }}              
          - name: SEND_PROXY
            value: "send-proxy"            
            {{- end }}     
          - name: NAME
            value: "docker-mailserver-pop3s"
          - name: WEBHOOK
            value: {{ .Values.haproxy.webhookUrl }}
          - name: WEBHOOK_TOKEN
            valueFrom:
              secretKeyRef:
                name: {{ template "dockermailserver.fullname" . }}-secrets
                key: webhook_token.secret                  
 
      restartPolicy: "Always"
{{ end }}